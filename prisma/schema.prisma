// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int @id @default(autoincrement())
  username    String
  email       String @unique @db.VarChar(100)
  password    String    @db.VarChar(255)
  createdAt   DateTime @default(now())
  role        Role @default(USER)
}

model Admin {
  id          Int @id @default(autoincrement())
  username    String
  email       String @unique @db.VarChar(100)
  password    String  @db.VarChar(255)
  role        Role @default(ADMIN)
  courses     Course[]
  token       Int
  createdAt   DateTime @default(now())
}

model Course{
  id                Int @id @default(autoincrement())
  title             String @db.VarChar(250)
  description       String 
  content           String @db.VarChar(5000)
  author            Admin @relation(fields: [ instructorId ], references: [ id ])
  instructorId      Int
  price             Int 
  purchasedCourses  PurchasedCourse[]
  payment           Payment[]
}

model PurchasedCourse{
  id                Int @id @default(autoincrement())
  Price             Int 
  course            Course @relation(fields: [courseId], references: [id])
  courseId          Int
  purchaseMethod    PurchaseMethod @default(esewa)
  status            Status @default(pending)
  createdAt         DateTime @default(now())
}

model Payment{
  id                  Int @id @default(autoincrement())
  transactionId       String 
  courseId            Int
  course              Course @relation(fields: [courseId], references: [id])
  amount              Int
  dataVerificationReq Json?
  apiQueryFromUser    Json?
  paymenGateway       PurchaseMethod @default(esewa)
  status            Status @default(pending)
  createdAt           DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Status {
  pending
  failed
  success
  refunded
}

enum PurchaseMethod {
  esewa
  khalti
}